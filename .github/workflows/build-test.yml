name: Build test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        host: [windows-latest, ubuntu-latest, macos-latest]
        os: [win, linux, osx]
        arch: [x86, x64, arm]
        sc: [no-self-contained, self-contained]
        exclude:
          - os: linux
            arch: x86
          - os: osx
            arch: x86
          - os: osx
            arch: arm          
    runs-on: ${{ matrix.host }}
    env:
      APP_NAME: famicom-dumper
      PROJECT_PATH: FamicomDumper
      OUTPUT_DIR: output
      CONFIGURATION: Release
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Checkout submodules
      run: git submodule update --init --recursive
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Build
      env:
        SC_OPS: ${{ matrix.sc == 'self-contained' && '--self-contained true -p:PublishTrimmed=True' || '--no-self-contained' }}
        OUTPUT_SUBDIR: ${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.sc }}
      run: dotnet publish ${{ env.PROJECT_PATH }} -c ${{ env.CONFIGURATION }} -r ${{ matrix.os }}-${{ matrix.arch }} -p:PublishSingleFile=true $SC_OPS -p:IncludeAllContentForSelfExtract=true -o ${{ env.OUTPUT_DIR }}/${{ env.OUTPUT_SUBDIR }}/${{ env.APP_NAME }}
    - name: Simple test
      if: |
        (matrix.host == 'ubuntu-latest' && matrix.os == 'linux' && matrix.arch != 'arm') 
        || (matrix.host == 'macos-latest' && matrix.os == 'osx' && matrix.arch != 'arm')
        || (matrix.host == 'windows-latest' && matrix.os == 'win' && matrix.arch != 'arm')
      env:
        OUTPUT_SUBDIR: ${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.sc }}
      run: |
        cd ${{ env.OUTPUT_DIR }}/${{ env.OUTPUT_SUBDIR }}/${{ env.APP_NAME }}
        ./famicom-dumper list-mappers
